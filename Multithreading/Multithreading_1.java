public class Multithreading_1{

    /*
     * Реализация многопоточности заключается в классе Thread. Чтобы создать новый поток, нам надо создать объект это класса. 
     * Сначала работает главный поток программы, потом от него порождаются дочерние. 
     * Главный поток имеет имя main по умолчанию. Чтобы получить текущий поток, используется метод Thread.currentThread().
     * Класс Thread имеет следующие часто используемые методы:
        getName():                  возвращает имя потока
        setName(String name):       устанавливает имя потока
        getPriority():              возвращает приоритет потока
        setPriority(int proirity):  устанавливает приоритет потока. Приоритет является одним из ключевых факторов для выбора системой 
                                    потока из кучи потоков для выполнения. В этот метод в качестве параметра передается числовое значение 
                                    приоритета - от 1 до 10. По умолчанию главному потоку выставляется средний приоритет - 5.
        isAlive():                  возвращает true, если поток активен
        isInterrupted():            возвращает true, если поток был прерван
        join():                     один поток ожидает завершение другого потока
        run():                      определяет точку входа в поток
        sleep():                    приостанавливает поток на заданное количество миллисекунд
        start():                    запускает поток, вызывая его метод run()
        interrupt():                
     */
    public static void main(String[] args){

        /*
         *  Получение названия текущего потока. 
         */
        Thread t = Thread.currentThread();
        System.out.println("Name of current thread: " + t.getName());

        /*
         * Получение полной информации по потоку. 
         * [1. Имя потока. 2. Приоритет 3. Имя группы потоков]
         * Инфо по первому можно получить через метод getName(); 
         * Инфо по второму можно получить через метод getPriority(); 
         * Инфо по третьему можно получить через метод getThreadGroup().getName();
         */
        Thread t_2 = Thread.currentThread();
        System.out.println("Full thread info: " + t_2);
        
    }
}